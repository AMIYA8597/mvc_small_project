<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat APP</title>
    <link rel="stylesheet" href="/style.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.1/socket.io.js"></script>
</head>

<body>
    <h1 class="room-message"></h1>
    <div class="window">
        <div class="chat-message">
            <div id="output"></div>
            <div id="feedback"></div>
        </div>
        <div class='fields'>
            <input type="text" id="message" placeholder="Enter message">
            <button id="send">Send</button>
        </div>
    </div>
    <div class="online">
        <p class="users-online">Users Online</p>
        <div class="users">
        </div>
    </div>
    <script src="/chat.js"></script>
</body>

</html>







<!-- 

import React, { useState } from 'react';

function TodoList() {
  const [todos, setTodos] = useState([]);
  const [inputValue, setInputValue] = useState('');

  const handleInputChange = (e) => {
    setInputValue(e.target.value);
  };

  const handleAddTodo = () => {
    if (inputValue.trim() !== '') {
      setTodos([...todos, inputValue]);
      setInputValue('');
    }
  };

  const handleDeleteTodo = (index) => {
    const newTodos = [...todos];
    newTodos.splice(index, 1);
    setTodos(newTodos);
  };

  return (
    <div>
      <h1>Todo List</h1>
      <input
        type="text"
        value={inputValue}
        onChange={handleInputChange}
        placeholder="Enter a todo..."
      />
      <button onClick={handleAddTodo}>Add</button>
      <ul>
        {todos.map((todo, index) => (
          <li key={index}>
            {todo}
            <button onClick={() => handleDeleteTodo(index)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default TodoList; -->




















<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>MVC Home</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

        <style>
            /* Add your CSS styles here */
        </style>
    </head>

    <body>
        <div class="container">
            <header>
                <h1>Welcome <%= userName %></h1>
                <p>Your Mobile Number: <%= mobileNo %></p>
            </header>
            
            <main>
                <section id="searchSection">
                    <input type="text" id="searchInput" placeholder="Search by username or mobile number">
                    <button onclick="searchUsers()">Search</button>
                </section>

                <section id="userList">
                    <!-- Display search results here -->
                </section>

                <section id="messageSection" style="display: none;">
                    <h2>Send Message</h2>
                    <textarea id="messageInput" rows="4" cols="50" placeholder="Type your message here"></textarea>
                    <button onclick="sendMessage()">Send</button>
                </section>
            </main>
        </div>

        <script>

            function searchUsers() {
                // Fetch search query
                let searchQuery = document.getElementById('searchInput').value;
                
                // Simulate searching users (replace with actual AJAX call)
                fetch('/search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ searchQuery: searchQuery })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.userName && data.mobileNo) {
                        // Display search results
                        displaySearchResults([{ username: data.userName, mobileNo: data.mobileNo }]);
                    } else {
                        // Display error message if user not found or sign-in process not completed
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error searching for user:', error);
                    alert('An error occurred while searching for the user. Please try again later.');
                });
            }

            function displaySearchResults(results) {
                let userListSection = document.getElementById('userList');
                userListSection.innerHTML = ''; // Clear previous results

                // Display each search result
                results.forEach(user => {
                    let userElement = document.createElement('div');
                    userElement.innerHTML = `
                        <p>Username: ${user.username}</p>
                        <p>Mobile Number: ${user.mobileNo}</p>
                        <button onclick="startChat('${user.username}')">Start Chat</button>
                    `;
                    userListSection.appendChild(userElement);
                });

                // Show message section
                document.getElementById('messageSection').style.display = 'block';
            }

            function startChat(username) {
                // Start chat with the selected user
                alert('Chat started with ' + username);
            }

            function sendMessage() {
                // Send message functionality
                let message = document.getElementById('messageInput').value;
                // Implement sending message logic (e.g., using AJAX)
                alert('Message sent: ' + message);
            }
        </script>

        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

    </body>
</html>



















<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>WhatsApp Home</title>
        <style>
            /* Add your CSS styles here */
        </style>
    </head>

    <body>
        <div class="container">
            <header>
                <h1>Welcome <%= userName %></h1>
                <p>Your Mobile Number: <%= mobileNo %></p>
            </header>
            
            <main>
                <section id="searchSection">
                    <input type="text" id="searchInput" placeholder="Search by username or mobile number">
                    <button onclick="searchUsers()">Search</button>
                </section>

                <section id="userList">
                    <!-- Display search results here -->
                </section>

                <section id="messageSection" style="display: none;">
                    <h2>Send Message</h2>
                    <textarea id="messageInput" rows="4" cols="50" placeholder="Type your message here"></textarea>
                    <button onclick="sendMessage()">Send</button>
                </section>
            </main>
        </div>

        <script>
            // JavaScript functionalities
            function searchUsers() {
                // Fetch search query
                let searchQuery = document.getElementById('searchInput').value;
                
                // Simulate searching users (replace with actual AJAX call)
                fetch('/searchUser', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ searchQuery: searchQuery })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.userName && data.mobileNo) {
                        // Display search results
                        displaySearchResults([{ username: data.userName, mobileNo: data.mobileNo }]);
                    } else {
                        // Display error message if user not found or sign-in process not completed
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error searching for user:', error);
                    alert('An error occurred while searching for the user. Please try again later.');
                });
            }

            function displaySearchResults(results) {
                let userListSection = document.getElementById('userList');
                userListSection.innerHTML = ''; // Clear previous results

                // Display each search result
                results.forEach(user => {
                    let userElement = document.createElement('div');
                    userElement.innerHTML = `
                        <p>Username: ${user.username}</p>
                        <p>Mobile Number: ${user.mobileNo}</p>
                        <button onclick="startChat('${user.username}')">Start Chat</button>
                    `;
                    userListSection.appendChild(userElement);
                });

                // Show message section
                document.getElementById('messageSection').style.display = 'block';
            }

            function startChat(username) {
                // Start chat with the selected user
                alert('Chat started with ' + username);
            }

            function sendMessage() {
                // Send message functionality
                let message = document.getElementById('messageInput').value;
                // Implement sending message logic (e.g., using AJAX)
                alert('Message sent: ' + message);
            }
        </script>
    </body>

</html>




































<div class="user-list">
  <% users.forEach(user => { %>
      <div class="user">
          <p><%= user.username %></p>
          <!-- You can include additional user information here -->
          <form action="/chat" method="post">
              <input type="hidden" name="senderId" value="<%= currentUser.id %>">
              <input type="hidden" name="receiverId" value="<%= user.id %>">
              <button type="submit">Chat</button>
          </form>
      </div>
  <% }); %>
</div>



















<%- include('../partials/header') %>

<h2>Welcome <%= user.username %></h2>
<p>Your mobile number: <%= user.mobileNumber %></p>

<h3>All Users</h3>
<ul>
    <% allUsers.forEach(user => { %>
        <li><%= user.username %> - <%= user.mobileNumber %></li>
    <% }); %>
</ul>

<%- include('../partials/footer') %>


















<div>
  <% if(chatData.length > 0) { %>
      <% chatData.forEach(chat => { %>
          <div>
              <p>
                  userName : <%= chat.userName %>
              </p>

              <p>
                  Moblie Number : <%= chat.mobileNo %>
              </p>

              <!-- <p>
                  Text : <%= chat.text %>
              </p> -->

              <!-- <p>
                  Time : <%= chat.timestamp %>
              </p> -->

          </div>
    <%  }) %>

  <%  }  else {%>

      <p>currently There is no One here</p>
      <%  }  %>
</div>